/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin library project to get you started.
 */

plugins {
    // Apply the Kotlin JVM plugin to add support for Kotlin.
    id 'org.jetbrains.kotlin.jvm'

    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id "org.jetbrains.kotlin.kapt"
    id 'com.google.protobuf' version '0.8.15'
}

sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.11.0"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.29.0'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}


repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // Align versions of all Kotlin components
    api platform('org.jetbrains.kotlin:kotlin-bom')

    // Use the Kotlin JDK 8 standard library.
    api Kotlin.stdlib
    api Ktor.gson
    api Ktor.ktorGson
    api Ktor.jvmLogging
    api Ktor.apache
    api Gson.lib
    api Log.logback
    api Apache.commonIO
    api GRPC.netty
    api GRPC.protobuf
    api GRPC.stub

    api Dagger.lib
    kapt Dagger.annotationProcessor
    api Dagger.assistedInjectLib
    kapt Dagger.assistedInjectProcessor

    testImplementation Testing.junit
}
